{"version":3,"sources":["reportWebVitals.js","components/DropdownItem.js","components/input.jsx","components/inputs.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DropdownItem","state","isDropdownOpen","dropdownToggleIcon","onDropdownClicked","setState","prevState","className","css","id","this","props","title","onClick","isOpened","children","React","Component","Input","contents","content","class","map","phrase","definition","href","link","Inputs","inputs","Data","input","style","fontWeight","sentence","ReactDOM","render","document","getElementById"],"mappings":"0jjEAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,iECDRQ,E,4MACJC,MAAQ,CACNC,gBAAgB,EAChBC,mBAAoB,K,EAGtBC,kBAAoB,WAClB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,gBAAiBI,EAAUJ,eAC3BC,mBAAqD,MAAjCG,EAAUH,mBAA6B,IAAM,S,4CAIrE,WAIE,OACE,sBACEI,UAAWC,YAAF,wFAITC,GAAIC,KAAKC,MAAMF,GALjB,UAOE,sBACEF,UAAWC,YAAF,0OADX,UAUE,8BAAME,KAAKC,MAAMC,QACjB,wBACEL,UAAWC,YAAF,wJAQTK,QAASH,KAAKN,kBAThB,SAWGM,KAAKT,MAAME,wBAGhB,cAAC,WAAD,CAAUW,SAAUJ,KAAKT,MAAMC,eAA/B,SACE,qBAAKK,UAAWC,YAAF,2CAAd,SAAyCE,KAAKC,MAAMI,oB,GAnDnCC,IAAMC,WA0DlBjB,IC7DTkB,E,4MACFjB,MAAQ,CACJQ,GAAI,EAAKE,MAAMF,GACfU,SAAU,EAAKR,MAAMS,S,4CAGzB,WACI,OACA,gCACKV,KAAKC,MAAMI,SAEZ,qBAAKM,MAAM,aAAX,SACKX,KAAKT,MAAMkB,SAASG,KAAI,SAAAF,GAAO,OAC5B,cAAC,EAAD,CAAcR,MAAQQ,EAAQG,OAA9B,SACI,sBAAKF,MAAM,YAAX,sBACeD,EAAQI,WACnB,4BAAG,mBAAGC,KAAOL,EAAQM,KAAlB,qD,GAhBXV,IAAMC,WA8BXC,I,QC7BTS,E,4MAEF1B,MAAQ,CACJ2B,OAAQC,G,4CAGZ,WAEI,OACI,8BACKnB,KAAKT,MAAM2B,OAAON,KAAI,SAAAQ,GAAK,OAAK,cAAC,EAAD,CACdV,QAASU,EAAMV,QADD,SAEzB,qBAAKC,MAAM,cAAcU,MAAO,CAACC,WAAW,UAA5C,SAAwDF,EAAMG,YAD7DH,EAAMrB,a,GAXVO,IAAMC,WAqBZU,IClBfO,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,SAKpD9C,M","file":"static/js/main.5a75f502.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Collapse } from \"react-collapse\";\n\nimport { css } from \"@emotion/css\";\n\n\nclass DropdownItem extends React.Component {\n  state = {\n    isDropdownOpen: false,\n    dropdownToggleIcon: \"+\"\n  };\n\n  onDropdownClicked = () => {\n    this.setState(prevState => ({\n      isDropdownOpen: !prevState.isDropdownOpen,\n      dropdownToggleIcon: prevState.dropdownToggleIcon === \"+\" ? \"-\" : \"+\"\n    }));\n  };\n\n  render() {\n\n\n\n    return (\n      <div\n        className={css`\n          margin: 20px;\n          color: black;\n          `}\n        id={this.props.id}\n      >\n        <div\n          className={css`\n          display: flex;\n          justify-content: space-between;\n          border-bottom: 2px solid white;\n          margin-bottom: 5px;\n          padding: 5px;\n          font-size: 18px;\n          `}\n        >\n          <div>{this.props.title}</div>\n          <button\n            className={css`\n            border: none;\n            font-size: 20px;\n            cursor: pointer;\n            color: black;\n          `}\n\n\n            onClick={this.onDropdownClicked}\n          >\n            {this.state.dropdownToggleIcon}\n          </button>\n        </div>\n        <Collapse isOpened={this.state.isDropdownOpen}>\n          <div className={css`text-align: left;`}>{this.props.children}</div>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nexport default DropdownItem;\n\n\n","import React from 'react';\nimport DropdownItem from './DropdownItem'\n\nclass Input extends React.Component {\n    state = {\n        id: this.props.id,\n        contents: this.props.content\n    };\n\n    render () { \n        return (\n        <div>\n            {this.props.children}            \n            \n            <div class=\"card-title\">\n                {this.state.contents.map(content => \n                    <DropdownItem title={ content.phrase }>\n                        <div class=\"card-body\">\n                            Meaning: { content.definition }\n                            <p><a href={ content.link }>Search in dictionary</a></p>\n                        </div>\n                        </DropdownItem>\n                    )}\n\n            </div>\n        \n                    \n        </div>\n        );\n    }\n\n}\n \nexport default Input;","import React from 'react';\nimport Input from './input';\nimport Data from '../data.json';\n\nclass Inputs extends React.Component {\n    \n    state = {\n        inputs: Data\n    };\n    \n    render() { \n\n        return (\n            <div>\n               { this.state.inputs.map(input => (<Input \n                    key={input.id} content={input.content}>\n                        <div class=\"card-header\" style={{fontWeight:\"bolder\"}}>{input.sentence}</div>\n                   </Input>    \n               ))} \n            </div>\n\n        )\n    }\n}\n \nexport default Inputs;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Inputs from './components/inputs';\n\nReactDOM.render(<Inputs />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}